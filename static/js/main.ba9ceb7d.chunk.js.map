{"version":3,"sources":["static/profilepic.png","hooks/userHooks.js","components/Header.js","hooks/mealHook.js","components/DayCard.js","components/User.js","components/WeekPicker.js","components/MealForm.js","components/Chef.js","serviceWorker.js","hooks/signInHook.js","components/Login.js","hooks/signUpHook.js","hooks/searchHook.js","components/SchoolSearch.js","components/SignUp.js","index.js","stores.js","static/readyplate.png","static/readyplate-logo-only.png"],"names":["module","exports","getUser","uid","a","meals","firebase","database","ref","once","then","snapshot","val","useUser","useState","user","setUser","loaded","useRef","useEffect","current","fetchedUser","getAndSetUser","Header","link","window","location","href","includes","Navbar","bg","expand","Brand","Image","src","require","alt","width","height","Toggle","aria-controls","Collapse","id","Nav","className","Link","DropdownButton","variant","title","Dropdown","Item","disabled","onClick","auth","signOut","catch","error","console","log","getMeals","cardGroup","cardDate","useMeals","setMeals","fetchedMeals","getAndSetMeals","DayCard","Card","style","marginBottom","Body","Title","Date","split","toDateString","Text","Jumbotron","maxHeight","Button","eventkey","Accordion","Object","entries","map","meal","as","eventKey","ListGroup","item","class","hidden","parseInt","toString","User","getWeek","curr","week","i","first","getDate","getDay","day","setDate","toISOString","slice","push","today","onAuthStateChanged","cardUser","getFullYear","getMonth","setWeek","weeklyPlates","Array","length","fill","index","Col","sm","group","Row","xl","marginTop","marginRight","marginLeft","currentDay","newDay","subOneWeek","addOneWeek","MealForm","formValues","setFormValues","updateFormValues","updateObject","getHandleFieldChange","event","fieldIndex","newValue","target","value","mealEntryCount","setMealEntryCount","mealFormItems","Form","Group","controlId","Label","Control","placeholder","onChange","handleFormSubmit","cleanedValues","keys","formInput","foodItems","date","name","set","writeMealData","muted","ButtonGroup","size","block","reload","Chef","mealCreation","setMealCreation","Container","display","justifyContent","Boolean","hostname","match","getSignIn","signInWithEmailAndPassword","email","password","errorCode","code","errorMessage","message","alert","userDefined","Login","userObj","fluid","backgroundColor","s","flex","md","undefined","paddingTop","paddingBottom","type","getSignUp","createUserWithEmailAndPassword","getSearchSchools","searchValue","axios","method","url","params","country","result","data","useSearch","searchQuery","searchResults","setSearchResults","fetchedSearch","getAndSetSearchResults","SchoolSearch","setSearchValue","getHandleSearchChange","updateSeletedSchool","options","school","getHandleSchoolChange","selectedSchool","setSelectedSchool","updateString","SignUp","label","clickedSubmit","fName","lName","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ba9ceb7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profilepic.9acfe78b.png\";","import { useState, useRef, useEffect } from 'react';\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\n  \n\nlet getUser = async (uid) => {\n    let meals = firebase.database().ref(`users/${uid}`);\n    return meals.once(\"value\").then(function(snapshot) {\n        return snapshot.val();\n    });\n  };\n  \n  const useUser = (uid) => {\n    const [user, setUser] = useState(null);\n    const loaded = useRef(false);\n    useEffect(() => {\n        if (!loaded.current) {\n        const getAndSetUser = async () => {\n                const fetchedUser = await getUser(uid);\n                setUser(fetchedUser);\n                loaded.current = true;\n            }\n            getAndSetUser();\n        }\n    }, [])\n    return user;\n  };\n\n  export default useUser;","import React from 'react';\n// import logo from './logo.svg';\nimport '../styles/Header.css';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Form, FormControl} from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport useUser from '../hooks/userHooks.js'\nimport { Image, DropdownButton, Dropdown} from 'react-bootstrap';\nimport firebase from 'firebase';\nimport auth from 'firebase/auth';\n\nfunction Header() {\n  const logout = () => {\n    firebase.auth().signOut().then(function() {\n      window.location.href = \"login\";\n    }).catch(function(error) {\n      console.log(\"Logout didn't work\");\n    });\n  }\n\n  // const plateEditor = () => {\n  //   if (user.type !== \"user\") {\n  //     return (\n  //         <Nav.Link href=\"/chef\">Plate Editor</Nav.Link>\n  //     )\n  //   } else return null;\n  // }\n\n  let link = window.location.href;\n  if (link.includes('login') || link.includes('signup')) {\n    return null;\n  } else {\n    return (\n      <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">\n        <Image src={require(\"../static/readyplate.png\")} alt='logo' width='90px' height='60px'/>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/\">Home</Nav.Link>\n          {/* {plateEditor} */}\n          <Nav.Link href=\"/chef\">Plate Editor</Nav.Link>\n        </Nav>\n        <DropdownButton variant=\"secondary\" id=\"dropdown-basic-button\" title=\"Information\">\n          <Dropdown.Item disabled='true'>\n            <Image src={require(\"../static/profilepic.png\")} width='50px' height='50px' alt='pf'/>\n          </Dropdown.Item>\n          <Dropdown.Item href=\"/profile\">Profile</Dropdown.Item>\n          <Dropdown.Item onClick={() => {logout()}}>Logout</Dropdown.Item>\n        </DropdownButton>\n      </Navbar.Collapse>\n    </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import firebase from 'firebase';\nimport 'firebase/database';\nimport { useRef, useState, useEffect } from 'react';\n\nlet getMeals = async (cardGroup, cardDate) => {\n    let meals = firebase.database().ref(`group/${cardGroup}/date/${cardDate}`);\n    return meals.once(\"value\").then(function(snapshot) {\n        return snapshot.val();\n    });\n};\n\nconst useMeals = (cardGroup, cardDate) => {\n    const [meals, setMeals] = useState(null);\n    const loaded = useRef(false);\n    useEffect(() => {\n        if (!loaded.current) {\n        const getAndSetMeals = async () => {\n                const fetchedMeals = await getMeals(cardGroup, cardDate);\n                setMeals(fetchedMeals)\n                // Commented out so daycards reload when requested.\n                // loaded.current = true;\n            }\n            getAndSetMeals();\n        }\n    }, [cardDate])\n    return meals;\n}\n\nexport default useMeals;","import React from 'react';\nimport '../styles/DayCard.css';\nimport { Card, Dropdown, DropdownButton, Accordion, ListGroup, Jumbotron, Button} from 'react-bootstrap';\nimport useMeals from '../hooks/mealHook.js'\n\n\n\nlet DayCard = ({\n    cardGroup,\n    cardDate,\n}) => {\n    const meals = useMeals(cardGroup, cardDate);\n    if (!meals) {\n        return (\n            <Card style={{marginBottom: \"5%\"}}>\n                <Card.Body>\n                    <Card.Title className=\"text-center\">\n                            {new Date(cardDate.split('-')[0], cardDate.split('-')[1]-1, cardDate.split('-')[2]).toDateString()}\n                    </Card.Title>\n                    <Card.Text>\n                        <Jumbotron style={{maxHeight: \"300px\"}}>\n                            <h1>No Plate Planned!</h1>\n                            <p>\n                                Contact your chef for more information. Sorry!\n                            </p>\n                            <p>\n                                <Button variant=\"info\">Contact Chef</Button>\n                            </p>\n                        </Jumbotron>\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        );\n    }\n    console.log(meals)\n    let eventkey = \"0\";\n    return (\n        // <Card style={{ width: '20rem' }}>\n        <Card style={{marginBottom: \"5%\"}}>\n            <Card.Body>\n                <Card.Title className=\"text-center\">\n                        {new Date(cardDate.split('-')[0], cardDate.split('-')[1]-1, cardDate.split('-')[2]).toDateString()}\n                </Card.Title>\n                <Card.Text>\n                    <Accordion>\n                        {Object.entries(meals).map(meal => (\n                            <Card>\n                                <Accordion.Toggle className=\"text-center pointer\" as={Card.Header} eventKey={eventkey}>\n                                    {meal[0]}\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey={eventkey}>\n                                <Card.Body>\n                                    <ListGroup variant=\"flush\">\n                                        {meal[1].map(item => (\n                                            <ListGroup.Item class=\"food-item\">{item}</ListGroup.Item>\n                                        ))}\n                                        <p hidden>\n                                            {eventkey = parseInt(eventkey)}\n                                            {eventkey ++}\n                                            {eventkey = eventkey.toString()}\n                                        </p>\n                                    </ListGroup>\n                                </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        ))}\n                    </Accordion>\n                </Card.Text>\n                {/* <div class='text-center'>\n                    <DropdownButton id=\"dropdown-basic-button\" title=\"Meal Options\" class='center'>\n                        <Dropdown.Item href=\"#/action-1\">Rate Meal</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-2\">Request Late Plate</Dropdown.Item>\n                        <Dropdown.Item href=\"#/action-3\">Message Chef</Dropdown.Item>\n                    </DropdownButton>\n                </div> */}\n            </Card.Body>\n        </Card>\n    );\n}\n\nexport default DayCard;","import React, { useState, useRef, useEffect } from 'react';\nimport {Container, Row, Col, Button} from 'react-bootstrap';\nimport '../styles/index.css';\nimport Header from './Header';\nimport DayCard from './DayCard';\nimport WeekPicker from './WeekPicker';\nimport { dates, group } from '../stores.js';\nimport firebase from \"firebase/app\";\nimport 'firebase/database';\nimport useUser from '../hooks/userHooks.js'\n// TO-DO remove this line once pulled from db\n// let cardGroup = group;\n\nlet User = () => {\n\n  // get current week\n  const getWeek = (curr) => {\n  let week = []\n  for (let i = 1; i <= 5; i++) {\n    let first = curr.getDate() - curr.getDay() + i;\n    let day = new Date(curr.setDate(first)).toISOString().slice(0, 10);\n    week.push(day);\n  } \n  return week;\n  }\n\n  const today = new Date();\n\n  let uid = \"\";\n  firebase.auth().onAuthStateChanged((user) => {\n    if (user) {\n      uid = user.uid;\n    } else {\n        window.location.href=\"/login\";\n    }\n  });\n\n  const cardUser = useUser(uid);\n  // set default of week to current date and add modifiers\n  const [week, setWeek] = useState(getWeek(new Date(today.getFullYear(), today.getMonth(), today.getDate())));\n\n  const addOneWeek = () => {\n    let currentDay = new Date(week[0]);\n    let newDay = new Date(currentDay.getFullYear(), currentDay.getMonth(), currentDay.getDate()+7);\n    setWeek(getWeek(newDay));\n  }\n  const subOneWeek = () => {\n    let currentDay = new Date(week[0]);\n    let newDay = new Date(currentDay.getFullYear(), currentDay.getMonth(), currentDay.getDate()-7);\n    setWeek(getWeek(newDay));\n  };\n\n  if(!cardUser) {\n    return null;\n  } else {\n    // Generate weeklyPlates based on week array\n    const weeklyPlates = (new Array(week.length)).fill(0).map((item, index) => (\n      <Col sm>\n        <DayCard cardDate={week[index]} cardGroup={Object.entries(cardUser)[0][1].group} />\n      </Col>\n    ));\n    console.log(\"user:\")\n    console.log(Object.entries(cardUser)[0][1].group);\n    console.log(\"dates:\")\n    console.log(week);\n    return (  \n      <div>\n          <Row>\n            <Col xl style={{marginTop: '2%', marginBottom: '2%', marginRight: '10%', marginLeft: '10%'}}>\n              <Button variant=\"secondary\" onClick={() => {subOneWeek()}}>Previous Week</Button>\n              <Button variant=\"secondary\" className=\"float-right\" onClick={() => {addOneWeek()}}>Next Week</Button>\n            </Col>\n          </Row>\n          <Row>\n            {weeklyPlates}\n          </Row>\n      </div>\n      )\n  }\n};\n\nexport default User;\n","import React from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport '../styles/WeekPicker.css';\n\nlet date = new Date();\n\nlet WeekPicker = () => {\n    return (\n        <div>\n            <DateRangePicker initialSettings={{ startDate: date.getMonth() + '/'+ date.getDate() +'/' + date.getFullYear()}}>\n                <button class=\"material-button\"type=\"button\"><span>Pick Dates</span></button>\n            </DateRangePicker>\n        </div>\n    );\n}\n\nexport default WeekPicker;","import React, { useEffect, useRef, useState } from 'react';\nimport { Container, Row, Col, Card, Form, Dropdown, DropdownButton, Button, ButtonGroup} from 'react-bootstrap';\nimport firebase from \"firebase/app\";\nimport 'firebase/database';\nimport '../styles/Chef.css'\nimport useUser from '../hooks/userHooks.js'\n\n\nconst MealForm = () => {\n    const user = useUser();\n    // Get form values from field and add to object of form values\n    const [formValues, setFormValues] = useState({});\n    const updateFormValues = (updateObject) => {\n        setFormValues({\n            ...formValues,\n            ...updateObject\n        });\n    };\n    const getHandleFieldChange = (index) => (event) => {\n        const fieldIndex = index;\n        const newValue = event.target.value;\n        updateFormValues({\n            [fieldIndex]: newValue,\n        })\n    }\n    // Add new item field when user clicks 'add an item'\n    const [mealEntryCount, setMealEntryCount] = useState(1);\n    const addOneMealEntry = () => setMealEntryCount(mealEntryCount + 1);\n    const deleteOneMealEntry = () => {\n        updateFormValues({\n            [mealEntryCount - 1]: null\n        })\n        setMealEntryCount(mealEntryCount >1 ? mealEntryCount - 1 : mealEntryCount)\n    };\n\n    const mealFormItems = (new Array(mealEntryCount)).fill(0).map((item, index) => (\n        <Form.Group controlId={`mealForm.mealItem${index + 1}`}>\n            <Form.Label>Item #{(index+1).toString()}</Form.Label>\n            <Form.Control placeholder=\"Lasagna\" onChange={getHandleFieldChange(index)}/>\n        </Form.Group>\n    ))\n    const handleFormSubmit = () => {\n        const cleanedValues = {};\n        for (let item of Object.keys(formValues)) {\n            if (formValues[item] !== null) {\n                cleanedValues[item] = formValues[item];\n            }\n        }\n        console.log(\"Form Values:\")\n        console.log(cleanedValues);\n        writeMealData(cleanedValues);\n    }\n\n    function writeMealData(formInput) {\n        let foodItems = {};\n        for (let item of Object.keys(formInput)) {\n            if (item !== \"name\" && item !== \"date\") {\n                foodItems[item] = formInput[item];\n            }\n        }\n        console.log(\"Food Items:\")\n        console.log(foodItems);\n        firebase.database().ref(`group/${user.group}/date/${formInput.date}/${formInput.name}`).set(foodItems);\n    }\n\n\n    return (\n        <div>\n            <Form id=\"meal-editor\">\n                <Form.Group controlId=\"mealForm.mealName\">\n                    <Form.Label>Meal Name</Form.Label>\n                    <Form.Control placeholder=\"Dinner\" onChange={getHandleFieldChange('name')}/>\n                </Form.Group>\n                <Form.Group controlId=\"mealForm.mealDate\">\n                    <Form.Label>Meal Date</Form.Label>\n                    <Form.Control placeholder=\"YYYY-MM-DD\" onChange={getHandleFieldChange('date')}/>\n                    <Form.Text id=\"dateHelpBlock\" muted>\n                        All dates must be in the form YYYY-MM-DD. Don't forget your slashes!\n                    </Form.Text>\n                </Form.Group>\n                {mealFormItems}\n            </Form>\n            <ButtonGroup>\n                <Button variant=\"primary\" onClick={addOneMealEntry}>\n                    Add an Item\n                </Button>\n                <Button variant=\"danger\" onClick={deleteOneMealEntry}>\n                    Delete an Item\n                </Button>\n            </ButtonGroup>\n            <div><br/></div>\n            <Button variant=\"light\" size=\"lg\" block onClick={() => {handleFormSubmit(); window.location.reload()}}>\n                Submit\n            </Button>\n        </div>\n    );\n}\n\nexport default MealForm;","import React, { useEffect, useRef, useState } from 'react';\nimport { Container, Row, Col, Card,Button, ButtonGroup} from 'react-bootstrap';\nimport '../styles/Chef.css'\nimport MealForm from './MealForm.js'\n\nconst Chef = () => {\n    const [mealCreation, setMealCreation] = useState(false);\n    const addMealCreation = () => setMealCreation(!mealCreation);\n    const mealFormItems = mealCreation ?\n             (\n                <Card>\n                    <Card.Body>\n                        <Card.Title className=\"text-center\">\n                            Plan your meal!\n                        </Card.Title>\n                    </Card.Body>\n                    <Card.Body>\n                        <MealForm/>\n                    </Card.Body>\n                </Card>\n            ) : null\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div><br/><br/></div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                            <Button variant=\"primary\" size=\"large\" block onClick={addMealCreation}>\n                                Add a Plate\n                            </Button>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col>\n                        <div><br/><br/></div>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col style={{display: 'flex', justifyContent: 'center'}}>\n                        {mealFormItems}\n                    </Col>\n                </Row>\n            </Container>\n      </div>\n    );\n}\n\nexport default Chef;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useState, useRef, useEffect } from 'react';\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\n\nlet getSignIn = async (user) => {\n    return firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n    .then((user) => {\n        console.log(user);\n    })\n    .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode + errorMessage);\n        alert('Wrong Username or Password');\n    });\n  };\n\n  export default getSignIn;","import React, { useState } from 'react';\nimport {Image, Form, Col, Row, Container, Button, Jumbotron } from 'react-bootstrap';\nimport getSignIn from '../hooks/signInHook.js'\nimport firebase from 'firebase';\nimport auth from 'firebase/auth';\nimport useUser from '../hooks/userHooks.js';\n\nexport let user = {};\nlet userDefined = false;\n\nfunction Login () {\n    const [formValues, setFormValues] = useState({});\n    const updateFormValues = (updateObject) => {\n        setFormValues({\n            ...formValues,\n            ...updateObject\n        });\n    };\n    const getHandleFieldChange = (index) => (event) => {\n        const fieldIndex = index;\n        const newValue = event.target.value;\n        updateFormValues({\n            [fieldIndex]: newValue,\n        })\n    }\n    let uid = \"\";\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n          uid = user.uid;\n          userDefined = true;\n          window.location.href = '/';\n        } else {\n          console.log(\"Didn't work\");\n        }\n      });\n      \n      let userObj = useUser(uid);\n\n      if(userDefined) {\n        user = Object.entries(userObj)[0][1];\n      }\n    return (\n        <div>\n            <Container fluid style={{backgroundColor: '#f47373', height: '100vh', display: 'flex'}}>\n                <Row s={2} style={{flex: '1'}}>\n                    <Col md={8} style={{justifyContent:'center'}}>\n                        <div style={{marginTop: '5%'}}>\n                            <Image style={{ flex:1, height: undefined, width: undefined }} src={require(\"../static/readyplate.png\")} fluid />\n                        </div>\n                    </Col>\n                    <Col style={{backgroundColor:'skyblue'}}>\n                        <div>\n                            <Image src={require(\"../static/readyplate-logo-only.png\")} fluid style={{marginTop:'20%'}}/>\n                        </div>\n                        <Form style={{paddingTop:'5%', paddingBottom: '5%', flex: 1, height: \"1\"}}>\n                            <Form.Group controlId=\"formEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Enter Email\" onChange={getHandleFieldChange('email')}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={getHandleFieldChange('password')}/>\n                            </Form.Group>\n                            <Button style={{marginTop:'5%'}} block onClick={() => {getSignIn(formValues)}}>\n                                    Sign In\n                            </Button>\n                            <p style={{marginTop:'10%'}}>\n                                Don't have an account yet?\n                            </p>\n                            <Button block href='/signup'>\n                                Sign Up\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default Login;","import { useState, useRef, useEffect } from 'react';\nimport firebase from \"firebase/app\";\nimport 'firebase/auth';\n\nlet getSignUp = async (user) => {\n    return firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n    .then((user) => {\n        console.log(user.uid);\n        return user.uid;\n    })\n    .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode + errorMessage);\n        alert('This user already exists.');\n    });\n  };\n\n  export default getSignUp;","import axios from 'axios';\nimport { useRef, useState, useEffect } from 'react';\n\nasync function getSearchSchools(searchValue) {\n    const result = await axios({\n        method: 'get',\n        url: 'http://universities.hipolabs.com/search',\n        params: {\n            name: searchValue,\n            country: 'United States'\n        }\n    });\n    return result.data;\n}\n\nconst useSearch = (searchQuery) => {\n    const [searchResults, setSearchResults] = useState(null);\n    const loaded = useRef(false);\n    useEffect(() => {\n        if (!loaded.current) {\n        const getAndSetSearchResults = async () => {\n                const fetchedSearch = await getSearchSchools(searchQuery);\n                setSearchResults(fetchedSearch)\n                // Commented out so daycards reload when requested.\n                // loaded.current = true;\n            }\n            getAndSetSearchResults();\n        }\n    }, [searchQuery])\n    return searchResults;\n}\n\nexport default useSearch;","import React, { useState } from 'react';\nimport { Form, ListGroup, Button } from 'react-bootstrap';\nimport useSearch from '../hooks/searchHook.js';\nimport { debounce } from \"throttle-debounce\";\n\nlet SchoolSearch = () => {\n    // auto search for schools and update dropdown list respectively \n\n    const [searchValue, setSearchValue] = useState(\"\");\n    \n    const updateSearchValue = (updateString) => {\n        setSearchValue(updateString);\n    };\n    \n\n    const getHandleSearchChange = (event) => {\n        const newValue = event.target.value;\n        updateSearchValue(newValue);\n        updateSeletedSchool(newValue);\n    };\n\n    // dropdown list to be updated\n\n    const schools = useSearch(searchValue) || new Array(5).fill(\"\");\n    \n    const options = schools.slice(0, 3).map((school) => (\n        <ListGroup.Item>\n            <Button variant='light'  value={school.name} onClick={(event) => {getHandleSchoolChange(event)}}>+</Button>\n            &nbsp;\n            {school.name}\n        </ListGroup.Item>\n    ))\n    \n    // code to change school when list item is clicked\n    const [selectedSchool, setSelectedSchool] = useState(\"\");\n\n    const updateSeletedSchool = (updateString) => {\n        setSelectedSchool(updateString);\n    };\n\n    const getHandleSchoolChange = (event) => {\n        const newValue = event.target.value;\n        updateSeletedSchool(newValue);\n    };\n    \n    return (\n        <div>\n            <Form.Group>\n                <Form.Label>University</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Search Schools\" value={selectedSchool} onChange={(event) => {getHandleSearchChange(event);}}/>\n            </Form.Group>\n            <ListGroup>\n                {options}\n            </ListGroup>\n        </div>\n    )\n}\n\nexport default SchoolSearch;","import React, { useState } from 'react';\nimport {Image, Form, Col, Row, Container, Button, Jumbotron } from 'react-bootstrap';\nimport getSignUp from '../hooks/signUpHook.js'\nimport SchoolSearch from './SchoolSearch.js';\nimport firebase from 'firebase';\nimport database from 'firebase/database'\nimport useUser from '../hooks/userHooks.js'\n\n\nfunction SignUp () {\n    const [formValues, setFormValues] = useState({});\n    const updateFormValues = (updateObject) => {\n        setFormValues({\n            ...formValues,\n            ...updateObject\n        });\n    };\n    const getHandleFieldChange = (label) => (event) => {\n        const fieldIndex = label;\n        const newValue = event.target.value;\n        updateFormValues({\n            [fieldIndex]: newValue,\n        })\n    }\n    const reload = () => {\n        window.location.href = '/';\n    }\n\n    let uid = \"\";\n    let userDefined = false;\n    let clickedSubmit = false;\n\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user && !userDefined) {\n            uid = user.uid;\n            userDefined = true;\n            if (formValues.group && uid && clickedSubmit) {\n                console.log(formValues);\n                firebase.database().ref(`users/${uid}`).set({\n                    group: formValues.group,\n                    name: formValues.fName + \" \" + formValues.lName,\n                    type: formValues.type\n                }).then(() => {\n                    console.log('Sign-Up successful');\n                    reload();\n                }).catch((error) => {\n                    console.log('Writing user data to database unsuccessful');\n                });\n            }\n        } else {\n            console.log(\"Not Signed In\");\n        }\n        });\n\n\n    return (\n        <div>\n            <Container fluid style={{backgroundColor: '#f47373', display: 'flex'}}>\n                <Row s={2} style={{flex: '1'}}>\n                    <Col md={8} style={{justifyContent:'center'}}>\n                        <div style={{marginTop: '5%'}}>\n                            <Image style={{ flex:1, \n                                        height: undefined, \n                                        width: undefined,\n                                        }} src={require(\"../static/readyplate.png\")} fluid />\n                        </div>\n                    </Col>\n                    <Col style={{backgroundColor:'skyblue'}}>\n                        <div>\n                            <Image src={require(\"../static/readyplate-logo-only.png\")} fluid/>\n                        </div>\n                        <Form style={{paddingTop:'2%', paddingBottom: '2%', flex: 1, height: \"1\"}}>\n                            <Form.Group controlId=\"formName\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"First Name\" onChange={getHandleFieldChange('fName')}/>\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Last Name\" onChange={getHandleFieldChange('lName')}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control type=\"email\" placeholder=\"Enter Email\" onChange={getHandleFieldChange('email')}/>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Enter Password\" onChange={getHandleFieldChange('password')}/>\n                            </Form.Group>\n                            <SchoolSearch onChange={getHandleFieldChange('school')}/>\n                            <Form.Group controlId=\"formType\">\n                                <Form.Label>User type</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"user or chef?\" onChange={getHandleFieldChange('type')}/>\n                                <Form.Text id=\"typeHelpBlock\" muted>\n                                    Either enter user or chef (all lowercase!)\n                                </Form.Text>\n                            </Form.Group>\n                            <Form.Group controlId=\"formGroup\">\n                                <Form.Label>Group Code</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter Group Code\" onChange={getHandleFieldChange('group')}/>\n                            </Form.Group>\n                            <Button style={{marginTop:'5%'}} block onClick={() => {getSignUp(formValues); clickedSubmit = true;}}>\n                                    Sign Up\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default SignUp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport User from './components/User';\nimport Header from './components/Header';\nimport Chef from './components/Chef'\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { firebaseConfig} from './stores.js';\nimport firebase from \"firebase/app\";\nimport 'firebase/database';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Profile from './components/Profile';\nfirebase.initializeApp(firebaseConfig);\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header/>\n    <Router>\n      <Switch>\n        <Route path=\"/profile\">\n          <Profile/>\n        </Route>\n        <Route path=\"/login\">\n          <Login/>\n        </Route>\n        <Route path=\"/signup\">\n          <SignUp/>\n        </Route>\n        <Route path=\"/chef\">\n          <Chef/>\n        </Route>\n        <Route path=\"/\">\n          <User/>\n        </Route>\n       \n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nexport const firebaseConfig = {\n  apiKey: \"AIzaSyCA5DXoPJE6ilKLonGFQhEyetjip1jzUEM\",\n  authDomain: \"mealscheduler-aedc6.firebaseapp.com\",\n  databaseURL: \"https://mealscheduler-aedc6.firebaseio.com\",\n  projectId: \"mealscheduler-aedc6\",\n  storageBucket: \"mealscheduler-aedc6.appspot.com\",\n  messagingSenderId: \"520867095650\",\n  appId: \"1:520867095650:web:cd87edb3236614db3e1d3b\",\n  measurementId: \"G-2P49DVCNRV\"\n};\n\nexport let dates = [\"2020-10-12\", \"2020-10-13\"];\nexport let group = \"SigChiUNC\";\n","module.exports = __webpack_public_path__ + \"static/media/readyplate.de154ee3.png\";","module.exports = __webpack_public_path__ + \"static/media/readyplate-logo-only.aba4cfa4.png\";"],"sourceRoot":""}